name: Deploy Dev

on:
  push:
    branches: [test]

env:
  ACCOUNT_ID: CVETDEV
  ACCOUNT_USERNAME: covetrus_na_rx_management_admin
  ACCOUNT_PASSWORD: dHk6sZ
  CLIENT_ID: CVETDEV
  CLIENT_SECRET: 9c3acda0-5623-4836-b738-5dc8264d8e32
  BRANCH: test
  PLUGIN_VERSION: "1.0.6"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: test

      - name: Run build plugin jar
        working-directory: covetrus project/cvet
        run: |
          mvn versions:set -DnewVersion=${{env.PLUGIN_VERSION}} -f pom.xml --no-transfer-progress
          mvn clean package -Drubix.osgi.symbolic.name=${{env.ACCOUNT_ID}}.nitish -DskipTests --no-transfer-progress

      - name: Deploy
        working-directory: "covetrus project/cvet"
        shell: /bin/bash -xe {0}
        run: |
          echo -e "\nDEPLOYING\n"
          VERSION="${{env.PLUGIN_VERSION}}"
          cp $(find ./target -type f -name 'rubix-plugin-cvet*.jar') ./rubix-plugin-cvet-${VERSION}.jar
          echo "VERSION: ${VERSION}"
          BEARER=$(curl -sX POST "https://cvetdev.sandbox.api.fluentretail.com/oauth/token?username=$ACCOUNT_USERNAME&password=$ACCOUNT_PASSWORD&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&grant_type=password" | jq -r '.access_token')
          OUTPUT=$(curl -sX POST \
              -F "file=@./rubix-plugin-cvet-${VERSION}.jar" \
              -H "Authorization: Bearer ${BEARER}" \
              -H "fluent.account: CVETDEV" \
              -H "Content-Type: multipart/form-data" \
              "https://cvetdev.sandbox.api.fluentretail.com:443/orchestration/rest/v1/plugin/upload")

          STATUS=$(echo ${OUTPUT} | jq -r '.status')
          if [[ ${STATUS} == 200 ]]; then
              echo "Deploy successful"
              echo ${OUTPUT}
          else
              echo "Deploy failed"
              echo ${OUTPUT}
              exit 1
          fi

      - name: Install
        working-directory: covetrus project/cvet
        run: |
          echo -e "\nINSTALLING\n"
          VERSION="${{env.PLUGIN_VERSION}}"
          BEARER=$(curl -sX POST "https://cvetdev.sandbox.api.fluentretail.com/oauth/token?username=$ACCOUNT_USERNAME&password=$ACCOUNT_PASSWORD&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&grant_type=password" | jq -r '.access_token')
          curl -sX POST \
              -H "Authorization: Bearer ${BEARER}" \
              -H "fluent.account: CVETDEV" \
              -H "Content-Type: application/json" \
              --data "{\"accountId\":\"CVETDEV\",\"bundleName\":\"CVETDEV.nitish::${VERSION}\"}" \
              "https://CVETDEV.sandbox.api.fluentretail.com:443/orchestration/rest/v1/plugin/install"

      - name: Status
        working-directory: covetrus project/cvet
        run: |
          echo -e "\nSTATUS\n"
          VERSION="${{env.PLUGIN_VERSION}}"
          BEARER=$(curl -sX POST "https://cvetdev.sandbox.api.fluentretail.com/oauth/token?username=$ACCOUNT_USERNAME&password=$ACCOUNT_PASSWORD&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&grant_type=password" | jq -r '.access_token')
          OUTPUT=$(curl -sX GET \
              -H "Authorization: Bearer ${BEARER}" \
              -H "fluent.account: CVETDEV" \
              -H "Content-Type: application/json" \
              "https://CVETDEV.sandbox.api.fluentretail.com:443/orchestration/rest/v1/plugin/CVETDEV.nitish::${VERSION}/status")
          STATUS=$(echo ${OUTPUT} | jq -r '.bundleStatus')
          if [[ ${STATUS} == "ACTIVE" ]]; then
              echo "Deploy successful"
              echo ${OUTPUT}
          else
              echo "Deploy failed"
              echo ${OUTPUT}
              exit 1
          fi

      - name: workflow
        working-directory: covetrus project/cvet
        run: |
            BEARER=$(curl -sX POST "https://cvetdev.sandbox.api.fluentretail.com/oauth/token?username=$ACCOUNT_USERNAME&password=$ACCOUNT_PASSWORD&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&grant_type=password" | jq -r '.access_token')
            OUTPUT=$(curl -sX PUT \
                -H "Authorization: Bearer ${BEARER}" \
                -H "fluent.account: CVETDEV" \
                -H "Content-Type: application/json" \
                -- data "{"retailerId":"1","version":"1.56","entityType":"BILLING_ACCOUNT","entitySubtype":"CUSTOMER","description":"Default Billing Account workflow","versionComment":null,"createdBy":"covetrus_na_rx_management ","createdOn":"2023-08-03T07:51:28.655+00:00","id":null,"name":"BILLING_ACCOUNT::CUSTOMER","rulesets":[{"name":"CREATE","description":"CREATE BILLING_ACCOUNT","type":"BILLING_ACCOUNT","subtype":"CUSTOMER","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"ACTIVE"}}],"triggers":[{"status":"CREATED"}],"userActions":[]},{"name":"ProcessCreditForAppeasement","description":"Process credit for appeasement","type":"BILLING_ACCOUNT","subtype":"CUSTOMER","eventType":"NORMAL","rules":[{"name":"CVETDEV.INTEXP_22262.CreateCreditMemoFromAppeasement","props":{"creditMemoType":"CREDIT_MEMO","creditMemoItemType":"CREDIT_MEMO_ITEM"}}],"triggers":[{"status":"ACTIVE"}],"userActions":[]},{"name":"ProcessCreditForReturn","description":"Process credit For Return order","type":"BILLING_ACCOUNT","subtype":"CUSTOMER","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.CreateCreditMemoFromReturnOrder","props":{"creditMemoType":"RETURN","creditMemoItemType":"RETURN_ITEM"}}],"triggers":[{"status":"ACTIVE"}],"userActions":[]},{"name":"CREATE","description":"CREATE CREDIT MEMO","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"PENDING_REFUND"}},{"name":"CVETDEV.commonv2.SendEventGQL","props":{"eventName":"SendEventBasedOnEntityType"}}],"triggers":[{"status":"CREATED"}],"userActions":[]},{"name":"SendEventBasedOnEntityType","description":"Send event based on enitity type","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.SendEventBasedOnEntityType","props":{"eventName":"TaxRecalculationForReturnOrderItems","noMatchEventName":"CalculateAppeasementAmount"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"TaxRecalculationForReturnOrderItems","description":"Tax recalculation for return order items","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.TaxRecalculationForReturnOrder","props":{"eventName":"CalculatedTotalAmountToBeRefund"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"CalculatedTotalAmountToBeRefund","description":"Calculate total amount for refund","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.CalculateRefundAmount","props":{"eventName":"UpdatePaymentAndReturnOrderAttribute"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"UpdatePaymentAndReturnOrderAttribute","description":"update return order attribute","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.UpdateOrderAttributeAfterReturnOrderCreated","props":null},{"name":"CVETDEV.base.UpdateReturnOrderAttribute","props":null},{"name":"CVETDEV.base.UpdateCreditMemoAttribute","props":null},{"name":"CVETDEV.commonv2.SendEventGQL","props":{"eventName":"CreateRefundAmountRequest"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"CreateRefundAmountRequest","description":"Create refund amount request ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.UpdateCreditMemoForRequestedRefundAmount","props":null},{"name":"CVETDEV.base.CreateRefundAmountRequest","props":{"eventName":"SendRefundCreditRequest"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"SendRefundCreditRequest","description":"Send refund credit request webhook","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.SendRefundCreditRequestWebhook","props":{"webhookSettingName":"RefundCreditRequestWebhookEndPointURL"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"CalculateAppeasementAmount","description":"Calculate appeasement amount and update order attribute","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.UpdateCreditMemoAttribute","props":null},{"name":"CVETDEV.base.UpdateOrderAttributeAfterAppeasementCreated","props":{"eventName":"CreateRefundAmountRequest"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"RefundCreditResponse","description":"Update the return order based on refund credit response ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.UpdateOrderBasedOnRefundResponse","props":{"eventName":"CreateFiancialTransaction","noMatchEventName":"DO_NOTHING"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"CreateFiancialTransaction","description":"Create financial transaction ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.CreateFinancialTransactionAfterRefundResponse","props":{"type":"REFUND","currency":"USD","eventName":"UpdateCreditMemoStatus"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"UpdateCreditMemoStatus","description":"Update the return order status based on refund type","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.SendEventBasedOnRefundType","props":{"eventName":"UpdateStatusForReturnOrder","noMatchEventName":"UpdateStatusForAppeasement"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"UpdateStatusForReturnOrder","description":"Update the return order status based on refund credit response ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.SendEventOnVerifyingRefundResponseStatus","props":{"eventName":"ChangeCreditMemoStatusToCompleteForReturnOrder","responseStatus":"SUCCESSFUL","noMatchEventName":"ChangeCreditMemoStatusToFailedForReturnOrder"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"ChangeCreditMemoStatusToCompleteForReturnOrder","description":"Update the credit memo status to complete ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_COMPLETE"}},{"name":"CVETDEV.INTEXP_21656.CreateRefundIssuedData","props":{"eventName":"SendRefundIssuedEvent"}},{"name":"FLUENTRETAIL.base.SendEventForCreditMemoToReturn","props":{"eventName":"RefundComplete"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"ChangeCreditMemoStatusToFailedForReturnOrder","description":"Update the credit memo status to failed ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_FAILED"}},{"name":"CVETDEV.INTEXP_21656.CreateRefundIssuedData","props":{"eventName":"SendRefundIssuedEvent"}},{"name":"FLUENTRETAIL.base.SendEventForCreditMemoToReturn","props":{"eventName":"RefundRejected"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"UpdateStatusForAppeasement","description":"Update the return orderstatus based on refund credit response ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.base.SendEventOnVerifyingRefundResponseStatus","props":{"eventName":"ChangeCreditMemoStatusToCompleteForAppeasement","responseStatus":"SUCCESSFUL","noMatchEventName":"ChangeCreditMemoStatusToFailedForAppeasement"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"ChangeCreditMemoStatusToCompleteForAppeasement","description":"Update the credit memo status to complete ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_COMPLETE"}},{"name":"CVETDEV.INTEXP_21656.CreateRefundIssuedData","props":{"eventName":"SendRefundIssuedEvent"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"SendRefundIssuedEvent","description":"Send the refund issued data ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"CVETDEV.INTEXP_21656.SendRefundIssuedWebhook","props":{"webhookSettingName":"RefundIssuedWebhookEndPointURL"}}],"triggers":[{"status":"REFUND_COMPLETE"},{"status":"REFUND_FAILED"}],"userActions":[]},{"name":"ChangeCreditMemoStatusToFailedForAppeasement","description":"Update the credit memo status to failed ","type":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_FAILED"}},{"name":"CVETDEV.INTEXP_21656.CreateRefundIssuedData","props":{"eventName":"SendRefundIssuedEvent"}}],"triggers":[{"status":"PENDING_REFUND"}],"userActions":[]},{"name":"RefundComplete","description":"Update the status to Refund Complete","type":"CREDIT_MEMO","subtype":"RETURN","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_COMPLETE"}},{"name":"FLUENTRETAIL.base.SendEventForCreditMemoToReturn","props":{"eventName":"RefundComplete"}}],"triggers":[{"status":"PENDING_REFUND"},{"status":"CREATED"}],"userActions":[]},{"name":"RefundFailed","description":"Update the status to REFUND_FAILED","type":"CREDIT_MEMO","subtype":"RETURN","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_FAILED"}},{"name":"FLUENTRETAIL.base.SendEventForCreditMemoToReturn","props":{"eventName":"RefundRejected"}}],"triggers":[{"status":"PENDING_REFUND"},{"status":"CREATED"}],"userActions":[]},{"name":"RefundComplete","description":"Update the status to REFUND_COMPLETE","type":"CREDIT_MEMO","subtype":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_COMPLETE"}}],"triggers":[{"status":"PENDING_REFUND"},{"status":"CREATED"}],"userActions":[]},{"name":"RefundFailed","description":"Update the status to REFUND_FAILED","type":"CREDIT_MEMO","subtype":"CREDIT_MEMO","eventType":"NORMAL","rules":[{"name":"FLUENTRETAIL.base.ChangeStateGQL","props":{"status":"REFUND_FAILED"}}],"triggers":[{"status":"PENDING_REFUND"},{"status":"CREATED"}],"userActions":[]}],"statuses":[{"name":"CREATED","entityType":"BILLING_ACCOUNT","category":"BOOKING"},{"name":"ACTIVE","entityType":"BILLING_ACCOUNT","category":"BOOKING"},{"name":"REFUND_COMPLETE","entityType":"CREDIT_MEMO","category":"BOOKING"},{"name":"REFUND_FAILED","entityType":"CREDIT_MEMO","category":"BOOKING"},{"name":"CREATED","entityType":"CREDIT_MEMO","category":""},{"name":"PENDING_REFUND","entityType":"CREDIT_MEMO","category":"BOOKING"}],"settings":{}}" \
                "https://CVETDEV.sandbox.api.fluentretail.com:/api/v4.1/workflow")
            STATUS=$(echo ${OUTPUT} | jq -r '.eventStatus')
            if [[ ${STATUS} == "COMPLETE" ]]; then
                echo "Deploy successful"
                echo ${OUTPUT}
            else
                echo "Deploy failed"
                echo ${OUTPUT}
                exit 1
            fi

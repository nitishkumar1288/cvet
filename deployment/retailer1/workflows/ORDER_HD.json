{
  "settings": {
    "fc.rubix.sdk.webhook.retry.method": "preserve-event-details"
  },
  "rulesets": [
    {
      "userActions": [],
      "name": "CREATE",
      "description": "CREATE and Validate the order delivery address",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckOrderCoordinates"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateDefaultOriginAddressInOrder",
          "props": {
            "settingName": "DefaultOriginAddress"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AddReturnableQtyAttribute",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TaxRecalculationForOrder"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderCoordinates",
      "description": "CREATE \u0026 Validate order\u0027s delivery address",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ForwardIfOrderCoordinatesPresent",
          "props": {
            "eventName": "CheckForNoChargeOrder"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckForNoChargeOrder",
      "description": "Check whether the order belongs to the no charge order category",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderAttributeNameAndValueMatches",
          "props": {
            "noMatchEventName": "SendFraudCheckData",
            "attributeValue": "true",
            "eventName": "ProcessFraudCheckApproved",
            "attributeName": "isNoChargeOrder"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendFraudCheckData",
      "description": "call fraud check webhook request",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "FRAUD_REVIEW"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "FRAUD_REVIEW"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFraudCheckRequest"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendFraudCheckRequest",
      "description": "Send Fraud Check request Webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "FraudCheckWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FRAUD_REVIEW"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FraudCheckResponse",
      "description": "update order attribute based on fraud check response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderAttributeBasedOnFraudCheckResponse",
          "props": {
            "fraudCheckApprovedEvent": "FraudCheckApproved",
            "fraudCheckInReviewEvent": "FraudCheckInReview",
            "fraudCheckDeclinedEvent": "FraudCheckDeclined"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FraudCheckApproved",
      "description": "wait for scheduled time and call next event to process",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendScheduledEvent",
          "props": {
            "delay": 1,
            "eventName": "ProcessFraudCheckApproved"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ProcessFraudCheckApproved",
      "description": "update order status with fraud check approval",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "RX_MATCH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "RX_MATCH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendRxMatchRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FraudCheckDeclined",
      "description": "update order status with fraud check declined response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.OrderItemCancellationBasedOnItemStatus",
          "props": {
            "orderLineStatus": "CREATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderLineItemsInOrder",
          "props": {
            "toLineItemStatus": "CANCELLED",
            "eventName": "DO_NOTHING",
            "fromLineItemStatus": "CREATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerFraudCheckDeclinedRelatedWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerFraudCheckDeclinedRelatedWebhook",
      "description": "Trigger Fraud check Declined Related Webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateFraudCheckOrderCancellationNotes",
          "props": {
            "noteText": "FRAUD_REJECTED",
            "eventName": "sendOrderNoteWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromProperty",
          "props": {
            "cancellationReason": "FRAUD_REJECTED",
            "eventName": "SendOrderLineCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromProperty",
          "props": {
            "cancellationReason": "FRAUD_REJECTED",
            "eventName": "SendOrderCancellationEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FraudCheckInReview",
      "description": "update order status with fraud check in review",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "FRAUD_REVIEW_HOLD"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "FRAUD_REVIEW_HOLD"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FRAUD_REVIEW"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendRxMatchRequest",
      "description": "send Rx match webhook request",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "RxMatchRequestWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "RxServiceMatchInbound",
      "description": "update order items status from Rx service match initial response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateRxServiceInboundWithFacilityId",
          "props": {
            "eventName": "ProcessUpdatedRxServiceMatchInbound"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ProcessUpdatedRxServiceMatchInbound",
      "description": "update order items status from Rx service match updated response with facility id",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemsBasedOnRxInitialResponse",
          "props": {
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForRxServiceMatch"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForRxServiceMatch",
      "description": "update order status from Rx service match initial response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "ChangeOrderStatusToHoldForRxServiceMatch",
            "allMatchEventName": "ChangeOrderStatusToApprovedForRxServiceMatch",
            "partialMatchEventName": "ChangeOrderStatusToHoldForRxServiceMatch",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "RX_ACTIVE"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToApprovedForRxServiceMatch",
      "description": "update order status to RX_MATCH_COMPLETED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "RX_MATCH_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "RX_MATCH_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckOrderRemorsePeriodBeforeAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToHoldForRxServiceMatch",
      "description": "update order status to RX_HOLD",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "RX_HOLD"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "RX_HOLD"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "ScheduleEventForAllocationAndAutoCancellation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "ScheduleEventForAllocationAndAutoCancellation",
      "description": "Start the scheduler for auto cancellation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartSchedulerForAutoCancellation"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartSchedulerForAllocationTrigger"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartSchedulerForAutoCancellation",
      "description": "Get waiting time period and schedule the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendScheduledEventBasedOnSetting",
          "props": {
            "unit": "S",
            "scheduledEventName": "OrderCancelAfterNoRxApproval",
            "eventName": "DO_NOTHING",
            "settingName": "AutoCancellationWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartSchedulerForAllocationTrigger",
      "description": "Get waiting time period and schedule the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendScheduledEventBasedOnSetting",
          "props": {
            "unit": "S",
            "scheduledEventName": "CheckOrderItemStatusListAndBeginAllocation",
            "eventName": "CreateSchedulerWindow",
            "settingName": "RxMatchResponseAllocationWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderItemStatusListAndBeginAllocation",
      "description": "Check the order item status list and begin allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "CheckOrderRemorsePeriodBeforeAllocation",
            "orderLineStatus": "RX_ACTIVE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateSchedulerWindow",
      "description": "Create scheduler window",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateSchedulerWindow",
          "props": {
            "unit": "S",
            "attributeName": "schedulerWindow",
            "settingName": "RxMatchResponseAllocationWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "RxServiceApprovalInbound",
      "description": "update order items status from Rx service approval response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderItemStatusMatchingTheList",
          "props": {
            "statusList": [
              "RX_PENDING"
            ],
            "eventName": "ProcessUpdatedRxServiceApprovalInbound"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ProcessUpdatedRxServiceApprovalInbound",
      "description": "update order items based on the approval response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateRxServiceInboundWithFacilityId",
          "props": {
            "eventName": "UpdateOrderItemBasedOnApprovalResponse"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderItemBasedOnApprovalResponse",
      "description": "update order items based on the approval response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemsBasedOnRxInitialResponse",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForRxApprovalResp"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForRxApprovalResp",
      "description": "Update orde status based on order item status",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "CheckForCancelItemsInRxApprovalResp",
            "allMatchEventName": "ChangeOrderStatusToApprovedForRxApprovalResp",
            "partialMatchEventName": "CheckForCancelItemsInRxApprovalResp",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "RX_ACTIVE"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToApprovedForRxApprovalResp",
      "description": "update order status to RX_MATCH_COMPLETED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "RX_MATCH_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "RX_MATCH_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckForCancelItemsInRxApprovalResp"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckForCancelItemsInRxApprovalResp",
      "description": "Check For Cancellation In Rx Approval Resp",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatchesInServResp",
          "props": {
            "noMatchEventName": "CheckIfNoPendingItemExits",
            "rxServRespOrderLineStatus": "DECLINED",
            "eventName": "CancelItemsInOrderAndCheckForOrderCancellation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CancelItemsInOrderAndCheckForOrderCancellation",
      "description": "Cancel the order line item based on the order line status",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.OrderItemCancellationBasedOnItemStatus",
          "props": {
            "orderLineStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineItemWithDeclinedReason",
          "props": {}
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromRx",
          "props": {
            "rxCancellationReasonPrefix": "RX_DECLINED",
            "eventName": "SendOrderLineCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateOrderStatusFromPartialBasedOnCriteria"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToCancelled",
            "partialMatchEventName": "CaptureCancellationNotesAndSendEvent",
            "excludeStatusList": [
              ""
            ],
            "orderLineStatus": [
              "CANCELLED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToCancelled",
      "description": "cancel the order and update the line item information",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromRx",
          "props": {
            "rxCancellationReasonPrefix": "RX_DECLINED",
            "eventName": "SendOrderCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureCancellationNotes"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureCancellationNotesAndSendEvent",
      "description": "Capture the cancellation notes and send event",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateRxOrderCancellationNotes",
          "props": {
            "eventName": "sendOrderNoteWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TaxRecalculationForOrder"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckIfNoPendingItemExits"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureCancellationNotes",
      "description": "Capture the cancellation notes",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateRxOrderCancellationNotes",
          "props": {
            "eventName": "sendOrderNoteWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckIfNoPendingItemExits",
      "description": "Check if there are no pendning items and call the event",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "CheckOrderRemorsePeriodBeforeAllocation",
            "eventName": "CheckApprovedItemsAreInvolvedInResp",
            "orderLineStatus": "RX_PENDING"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckApprovedItemsAreInvolvedInResp",
      "description": "Check if there are any approved items and call the event",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatchesInServResp",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "rxServRespOrderLineStatus": "APPROVED",
            "eventName": "CheckSchedulerWindowInformation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckSchedulerWindowInformation",
      "description": "check scheduler information call the respective event",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRespTimeFitsInExistingActiveSchedulerWindow",
          "props": {
            "noMatchEventName": "ScheduleAllocationTriggerBasedOnRxApprovalResponse",
            "eventName": "DO_NOTHING",
            "attributeName": "schedulerWindow"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ScheduleAllocationTriggerBasedOnRxApprovalResponse",
      "description": "schedule the allocation trigger based on rx approvalResponse",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendScheduledEventBasedOnSetting",
          "props": {
            "unit": "S",
            "scheduledEventName": "CheckOrderRemorsePeriodBeforeAllocation",
            "eventName": "ModifySchedulerInformation",
            "settingName": "RxApprovalResponseAllocationWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ModifySchedulerInformation",
      "description": "Modify scheduler information",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.ModifySchedulerInformation",
          "props": {
            "unit": "S",
            "settingName": "RxApprovalResponseAllocationWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderRemorsePeriodBeforeAllocation",
      "description": "Check order remorse period before allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "ChangeStatusToPartialRxApproved",
            "orderLineStatus": "RX_ACTIVE"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderRemorsePeriodBeforeAllocation",
          "props": {
            "unit": "S",
            "eventName": "TriggerAllocationLogic",
            "settingName": "OrderRemorsePeriod"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeStatusToPartialRxApproved",
      "description": "Change order status to partial rx approved if the order status was RX_HOLD",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIAL_RX_MATCH_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIAL_RX_MATCH_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerAllocationLogic",
      "description": "Invoke the allocation logic with sendEventGql to avoid the status change delay",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartAllocationForRxActiveOrderLineItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartAllocationForRxActiveOrderLineItems",
      "description": "Start allocation for the items received",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventWithOrderItemInformation",
          "props": {
            "noMatchEventName": "StartAllocationForActiveOtcOrderLineItems",
            "approvalTypeList": [
              "RX"
            ],
            "eventName": "GetLocationInformationForExistingFacility",
            "itemTypeList": [
              "isCommercial",
              "isSterile",
              "isCompound",
              "isControlled"
            ],
            "orderLineStatus": "RX_ACTIVE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "GetLocationInformationForExistingFacility",
      "description": "Get the location information for exisitng facility",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.GetLocationInformationForExistingFacility",
          "props": {
            "eventNameToFindNewFacilityForItems": "FindNetworkOfOrderItems",
            "eventNameAfterFindingFacilityForAllItems": "FindKitProductsInAllocationProcess"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindNetworkOfOrderItems",
      "description": "Find the network for unassinged order item",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindNetworkOfOrderItems",
          "props": {
            "locationStatus": [
              "ACTIVE"
            ],
            "settingNameForNetworkDetermination": "NetworkInformationForOrderItem",
            "networkStatus": [
              "ACTIVE"
            ],
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindNetworkIsFoundForAllLineItems",
          "props": {
            "eventName": "PharmacyAuthorisationCheck"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PharmacyAuthorisationCheck",
      "description": "check for the pharmacy level authorisation before checking inventory",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.PharmacyAuthorisationCheck",
          "props": {
            "eventName": "FindKitProductsInAllocationProcess"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindKitProductsInAllocationProcess",
      "description": "Find whether any kit products are involved in the allocation process",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindKitProductsInAllocationProcess",
          "props": {
            "eventName": "CheckNonPreAssignedFacilityItemsInAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckNonPreAssignedFacilityItemsInAllocation",
      "description": "Find whether any kit products are involved in the allocation process",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckNonPreAssignedFacilityItemsInAllocation",
          "props": {
            "noMatchEventName": "UpdateOrderItemInformationAfterFindingLocation",
            "eventName": "FetchAllVpInformation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FetchAllVpInformation",
      "description": "Fetch all the vp for all the items involved in all locations of allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FetchAllVpInformation",
          "props": {
            "virtualCatalogueRef": "{{fluent.base.virtual.catalogue.ref}}",
            "eventNameIfNoLocationsAreFound": "AllocateUnassignedItemsToDefaultLocation",
            "eventName": "SoftReserveForPreAssignedFacilityOrderItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SoftReserveForPreAssignedFacilityOrderItems",
      "description": "check inventory for the order items in the selected locations for kit products",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SoftReserveForPreAssignedFacilityOrderItems",
          "props": {
            "virtualCatalogueRef": "{{fluent.base.virtual.catalogue.ref}}",
            "eventName": "AssignLocationToOrderItemBasedOnPriority"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "AssignLocationToOrderItemBasedOnPriority",
      "description": "Assign location to order item based on the priority of the locations",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AssignLocationToOrderItemBasedOnPriority",
          "props": {
            "eventName": "AllocateUnassignedItemsToDefaultLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "AllocateUnassignedItemsToDefaultLocation",
      "description": "Allocate unassigned items to the default location",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AllocateUnassignedItemsToDefaultLocation",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateFacilityIdInAllocationDto",
          "props": {
            "eventName": "UpdateOrderItemInformationAfterFindingLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderItemInformationAfterFindingLocation",
      "description": "Change the order item status to allocated",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderLineItemsStatusAndLocationInformation",
          "props": {
            "toLineItemStatus": "ALLOCATED",
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventInline",
          "props": {
            "eventName": "CreateReservationForOrder"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartAllocationForActiveOtcOrderLineItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartAllocationForActiveOtcOrderLineItems",
      "description": "Start allocation for the otc items received",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventWithOtcOrderItemInformation",
          "props": {
            "noMatchEventName": "StartAllocationForActiveDropShipLineItems",
            "eventName": "CheckOrderCoordinatesForOtcItems",
            "orderLineStatus": "RX_ACTIVE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderCoordinatesForOtcItems",
      "description": "CREATE \u0026 Validate order\u0027s delivery address",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ForwardIfOrderCoordinatesPresent",
          "props": {
            "eventName": "GetLocationsForOtcNetwork"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "GetLocationsForOtcNetwork",
      "description": "Performs the \u0027ALL\u0027 inventory search against the virtual catalogue and sends the resulting proposed fulfilments as part of the response event.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.GetLocationsForNetwork",
          "props": {
            "locationStatuses": [
              "ACTIVE"
            ],
            "eventName": "CalculateOtcLocationsDistances",
            "networkRef": "A-OTC_HD"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CalculateOtcLocationsDistances",
      "description": "Performs the \u0027ALL\u0027 inventory search against the virtual catalogue and sends the resulting proposed fulfilments as part of the response event.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.CalculateLocationsDistances",
          "props": {
            "eventName": "MapEventAttributesFormatForOtcItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "MapEventAttributesFormatForOtcItems",
      "description": "Map the event attributes format for the otc items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.MapEventAttributesFormatForOtcItems",
          "props": {
            "eventName": "FindKitProductsInAllocationProcessOfOtcItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindKitProductsInAllocationProcessOfOtcItems",
      "description": "Find the kit products in the allocation process of otc items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindKitProductsInAllocationProcessOfOtcItems",
          "props": {
            "eventName": "SearchInventoryAtOtcLocations"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SearchInventoryAtOtcLocations",
      "description": "Performs an inventory search against the virtual catalogue and sends the resulting proposed fulfilments as part of the response event.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SearchInventoryAtLocationsForOtcItems",
          "props": {
            "virtualCatalogueRef": "{{fluent.base.virtual.catalogue.ref}}",
            "eventName": "PreCheckCapacityIsEnabledForOtcItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PreCheckCapacityIsEnabledForOtcItems",
      "description": "check capacity is enabled for otc items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckCapacityIsEnabledForAllocation",
          "props": {
            "noMatchEventName": "CheckRxItemsAreInvolvedInAllocation",
            "eventName": "SkipLocationExceedingCapacityForOtc",
            "settingName": "IsCapacityEnabledForOtcItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SkipLocationExceedingCapacityForOtc",
      "description": "Skip the locations exceeding the capacity",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SkipLocationExceedingCapacity",
          "props": {
            "eventNameIfAllLocationsAreExcluded": "AllocateUnassignedOtcItemsToDefaultLocation",
            "eventNameIfAllLocationsAreNotExcluded": "CheckRxItemsAreInvolvedInAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckRxItemsAreInvolvedInAllocation",
      "description": "Check Rx items are involved in the allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRxItemsAreInvolvedInAllocation",
          "props": {
            "noMatchEventName": "FindLocationForOtcProductsFromOtcNetwork",
            "eventName": "FindLocationForOtcProductsFromRxLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindLocationForOtcProductsFromRxLocation",
      "description": "If Rx items are involved in allocation fulfil the otc products from the rx location",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindLocationForOtcProductsFromRxLocation",
          "props": {
            "eventName": "CheckRemainingOtcItemsAndLocationExists"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckRemainingOtcItemsAndLocationExists",
      "description": "Check for remaining otc items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRemainingOtcItemsAndLocationExists",
          "props": {
            "noMatchEventName": "AllocateUnassignedOtcItemsToDefaultLocation",
            "eventName": "FulfilRemainingProductsFromOtcNetwork"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfilRemainingProductsFromOtcNetwork",
      "description": "Fulfil the remaining products from the otc network",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FulfilRemainingProductsFromOtcNetwork",
          "props": {
            "eventName": "AllocateUnassignedOtcItemsToDefaultLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindLocationForOtcProductsFromOtcNetwork",
      "description": "If no rx items are involved then fulfil the entire OTC products from the OTC network",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindLocationForOtcProductsFromOtcNetwork",
          "props": {
            "eventName": "AllocateUnassignedOtcItemsToDefaultLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "AllocateUnassignedOtcItemsToDefaultLocation",
      "description": "Allocate the unassinged otc items to the default location",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AllocateUnassignedOtcItemsToDefaultLocation",
          "props": {
            "defaultHillLocation": "VFC_WAREHOUSE",
            "eventName": "PostCheckCapacityIsEnabledForOtcItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PostCheckCapacityIsEnabledForOtcItems",
      "description": "post check capacity is enabled for otc items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckCapacityIsEnabledForAllocation",
          "props": {
            "noMatchEventName": "UpdateOtcOrderItemInformationAfterFindingLocation",
            "eventName": "UpdateCapacityCountInSelectedOtcLocation",
            "settingName": "IsCapacityEnabledForOtcItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateCapacityCountInSelectedOtcLocation",
      "description": "update the fulfilment count in selected location for capacity management",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateCapacityCountInSelectedOtcLocation",
          "props": {
            "eventName": "UpdateOtcOrderItemInformationAfterFindingLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOtcOrderItemInformationAfterFindingLocation",
      "description": "Update otc item information once location found",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOtcOrderLineItemsStatusAndLocationInformation",
          "props": {
            "toLineItemStatus": "ALLOCATED",
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventInline",
          "props": {
            "eventName": "CreateReservationForOtcOrderItems"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartAllocationForActiveDropShipLineItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartAllocationForActiveDropShipLineItems",
      "description": "Start allocation for the drop ship items received",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventWithDropShipOrderItemInformation",
          "props": {
            "noMatchEventName": "StartAllocationForActiveHillOrderLineItems",
            "dropShipItem": {
              "fulfilmentVendorShortName": [
                "ROYAL_CANIN",
                "PROCTER_AND_GAMBLE",
                "NESTLE"
              ]
            },
            "eventName": "FindKitProductsInAllocationProcessOfDropShipItems",
            "orderLineStatus": "RX_ACTIVE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindKitProductsInAllocationProcessOfDropShipItems",
      "description": "Find the kit products in the allocation process of drop ship items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindKitProductsInAllocationProcessOfDropShipItems",
          "props": {
            "eventName": "AssignDefaultLocationToDropShipProducts"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "AssignDefaultLocationToDropShipProducts",
      "description": "Assign default location to drop ship products",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AssignDefaultLocationToDropShipProducts",
          "props": {
            "defaultDropShipLocation": "VFC_WAREHOUSE",
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateDropShipOrderLineItemsStatusAndLocationInformation",
          "props": {
            "toLineItemStatus": "ALLOCATED",
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventInline",
          "props": {
            "eventName": "CreateReservationForDropShipOrderItems"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartAllocationForActiveHillOrderLineItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartAllocationForActiveHillOrderLineItems",
      "description": "Start allocation for the hill items received",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventWithHillOrderItemInformation",
          "props": {
            "noMatchEventName": "UpdateOrderStatusAfterAllocation",
            "eventName": "CheckOrderCoordinatesForHillItems",
            "hillItem": {
              "fulfilmentVendorShortName": [
                "HILLS"
              ]
            },
            "orderLineStatus": "RX_ACTIVE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderCoordinatesForHillItems",
      "description": "CREATE \u0026 Validate order\u0027s delivery address for hill items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ForwardIfOrderCoordinatesPresent",
          "props": {
            "eventName": "GetLocationsForHillNetwork"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "GetLocationsForHillNetwork",
      "description": "Performs the \u0027ALL\u0027 inventory search against the virtual catalogue and sends the resulting proposed fulfilments as part of the response event.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.GetLocationsForNetwork",
          "props": {
            "locationStatuses": [
              "ACTIVE"
            ],
            "eventName": "CalculateHillLocationsDistances",
            "networkRef": "HILLS_HD"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CalculateHillLocationsDistances",
      "description": "Performs the \u0027ALL\u0027 inventory search against the virtual catalogue and sends the resulting proposed fulfilments as part of the response event.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.CalculateLocationsDistances",
          "props": {
            "eventName": "MapEventAttributesFormatForHillItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "MapEventAttributesFormatForHillItems",
      "description": "Map the event attributes format for the hill items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.MapEventAttributesFormatForHillItems",
          "props": {
            "eventName": "FindKitProductsInAllocationProcessOfHillItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindKitProductsInAllocationProcessOfHillItems",
      "description": "Find the kit products in the allocation process of hill items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindKitProductsInAllocationProcessOfHillItems",
          "props": {
            "eventName": "SearchInventoryAtHillLocations"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SearchInventoryAtHillLocations",
      "description": "Performs an inventory search against the virtual catalogue and sends the resulting proposed fulfilments as part of the response event.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SearchInventoryAtLocationsForHillItems",
          "props": {
            "virtualCatalogueRef": "{{fluent.base.virtual.catalogue.ref}}",
            "eventName": "PreCheckCapacityIsEnabledForHillItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PreCheckCapacityIsEnabledForHillItems",
      "description": "check capacity is enabled for hill items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckCapacityIsEnabledForAllocation",
          "props": {
            "noMatchEventName": "FindLocationsToFulfilHillProducts",
            "eventName": "SkipLocationExceedingCapacityForHill",
            "settingName": "IsCapacityEnabledForHillItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SkipLocationExceedingCapacityForHill",
      "description": "Skip the locations exceeding the capacity for the hill items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SkipLocationExceedingCapacity",
          "props": {
            "eventNameIfAllLocationsAreExcluded": "AllocateUnassignedHillItemsToDefaultLocation",
            "eventNameIfAllLocationsAreNotExcluded": "FindLocationsToFulfilHillProducts"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FindLocationsToFulfilHillProducts",
      "description": "Find locations to fulfil the otc products",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FindLocationsToFulfilHillProducts",
          "props": {
            "eventName": "AllocateUnassignedHillItemsToDefaultLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "AllocateUnassignedHillItemsToDefaultLocation",
      "description": "Allocate the unassigned hill items to the default hill location",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AllocateUnassignedHillItemsToDefaultLocation",
          "props": {
            "defaultHillLocation": "VFC_WAREHOUSE",
            "eventName": "PostCheckCapacityIsEnabledForHillItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PostCheckCapacityIsEnabledForHillItems",
      "description": "check capacity is enabled for hill items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckCapacityIsEnabledForAllocation",
          "props": {
            "noMatchEventName": "UpdateHillOrderItemInformationAfterFindingLocation",
            "eventName": "UpdateCapacityCountInSelectedHillLocation",
            "settingName": "IsCapacityEnabledForHillItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateCapacityCountInSelectedHillLocation",
      "description": "update the fulfilment count in selected location for capacity management",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateCapacityCountInSelectedHillLocation",
          "props": {
            "eventName": "UpdateHillOrderItemInformationAfterFindingLocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateHillOrderItemInformationAfterFindingLocation",
      "description": "Update hill order item information once location found",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateHillOrderLineItemsStatusAndLocationInformation",
          "props": {
            "toLineItemStatus": "ALLOCATED",
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventInline",
          "props": {
            "eventName": "CreateReservationForHillOrderItems"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateOrderStatusAfterAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateReservationForOrder",
      "description": "Create reservation for each order item in an order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityFromOrder",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "RESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateReservationForOtcOrderItems",
      "description": "Create reservation for each otc order items in an order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityFromOtcOrderItems",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "RESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateReservationForDropShipOrderItems",
      "description": "Create reservation for each drop ship order items in an order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityFromDropShipOrderItems",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "RESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateReservationForHillOrderItems",
      "description": "Create reservation for each Hill order items in an order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityFromHillOrderItems",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "RESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusAfterAllocation",
      "description": "update the order status after allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRxItemsAreInvolvedInAllocation",
          "props": {
            "noMatchEventName": "UpdateOrderStatusBasedOnNonRxItems",
            "eventName": "UpdateOrderStatusBasedOnRxItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnRxItems",
      "description": "update the order status based on Rx items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "CheckOrderIsInPartialPharmacyAllocatedStageForRx",
            "statusList": [
              "RX_MATCH_COMPLETED",
              "PARTIAL_RX_MATCH_COMPLETED"
            ],
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForPharAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForPharAllocation",
      "description": "Update order status after allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToPharmacyAllocated",
            "partialMatchEventName": "ChangeOrderStatusToPartialPharmacyAllocated",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderIsInPartialPharmacyAllocatedStageForRx",
      "description": "check order status criteria is in partial pharmacy allocated",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "TriggerRxAssociatedEventsAfterAllocation",
            "statusList": [
              "PARTIALLY_PHARMACY_ALLOCATED"
            ],
            "eventName": "CheckPartialPharmacyAllocatedCriteriaForRx"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckPartialPharmacyAllocatedCriteriaForRx",
      "description": "check parital pharmacy allocated criteria",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToPharmacyAllocated",
            "partialMatchEventName": "TriggerRxAssociatedEventsAfterAllocation",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPharmacyAllocated",
      "description": "update order status to RX_MATCH_COMPLETED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerRxAssociatedEventsAfterAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPartialPharmacyAllocated",
      "description": "update order status to PARTIALLY_PHARMACY_ALLOCATED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerRxAssociatedEventsAfterAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerRxAssociatedEventsAfterAllocation",
      "description": "Trigger the event after the allocation process",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendPV1Request"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnNonRxItems",
      "description": "update the order status after allocation of non rx items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "CheckOrderIsInPartialPharmacyAllocatedStageForNonRx",
            "statusList": [
              "RX_MATCH_COMPLETED",
              "PARTIAL_RX_MATCH_COMPLETED"
            ],
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForNonRxItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForNonRxItems",
      "description": "Update order status after otc allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusPharmacyAllocatedNonRx",
            "partialMatchEventName": "ChangeOrderStatusPartialPharmacyAllocatedNonRx",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderIsInPartialPharmacyAllocatedStageForNonRx",
      "description": "check order is in partial pharmacy allocated stage for non rx",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "TriggerNonRxAssociatedEventsAfterAllocation",
            "statusList": [
              "PARTIALLY_PHARMACY_ALLOCATED"
            ],
            "eventName": "CheckPartialPharmacyAllocatedCriteriaForNonRx"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckPartialPharmacyAllocatedCriteriaForNonRx",
      "description": "Check partial pharmacy allocated criteria for non rx ",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusPharmacyAllocatedNonRx",
            "partialMatchEventName": "TriggerNonRxAssociatedEventsAfterAllocation",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusPharmacyAllocatedNonRx",
      "description": "update order status to PHARMACY_ALLOCATED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerNonRxAssociatedEventsAfterAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusPartialPharmacyAllocatedNonRx",
      "description": "update order status to PARTIALLY_PHARMACY_ALLOCATED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerNonRxAssociatedEventsAfterAllocation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerNonRxAssociatedEventsAfterAllocation",
      "description": "Trigger the events after the allocation process associated with non rx items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckNonRxItemsFulfilmentCriteria"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendPV1Request",
      "description": "Send webhook to PV1 based on the facility",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderLineItemsInOrderForRxItems",
          "props": {
            "toLineItemStatus": "PV1_READY",
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "CheckOrderIsInPartialPV1Stage",
            "statusList": [
              "PARTIALLY_PHARMACY_ALLOCATED",
              "PHARMACY_ALLOCATED"
            ],
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForPV1Request"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartSchedulerForFulfilmentReleaseTrigger"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartSchedulerForFulfilmentReleaseTrigger",
      "description": "Get waiting time period and schedule the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendScheduledEventBasedOnSetting",
          "props": {
            "unit": "S",
            "scheduledEventName": "CheckOrderItemStatusAndReleaseFulfilment",
            "eventName": "CreatePV1SchedulerWindow",
            "settingName": "PostPV1RequestFulfilmentReleaseWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreatePV1SchedulerWindow",
      "description": "Create PV1 scheduler window",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateSchedulerWindow",
          "props": {
            "unit": "S",
            "attributeName": "pv1SchedulerWindow",
            "settingName": "PostPV1RequestFulfilmentReleaseWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForPV1Request",
      "description": "Update order status after allocation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatusOfRxTypeItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "approvalTypeList": [
              "RX"
            ],
            "allMatchEventName": "ChangeOrderStatusToPV1Requested",
            "partialMatchEventName": "ChangeOrderStatusToPartialPV1Requested",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "PV1_READY"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPV1Requested",
      "description": "update order status to PV1_REQUESTED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PV1_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PV1_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerPV1AssociatedEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPartialPV1Requested",
      "description": "update order status to PARTIALLY_PV1_REQUESTED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_PV1_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_PV1_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerPV1AssociatedEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderIsInPartialPV1Stage",
      "description": "check order status is in partial PV1 requested",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "TriggerPV1AssociatedEvent",
            "statusList": [
              "PARTIALLY_PV1_REQUESTED"
            ],
            "eventName": "CheckPartialPV1RequestedCriteria"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckPartialPV1RequestedCriteria",
      "description": "Check partial PV1 requested criteria",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatusOfRxTypeItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "approvalTypeList": [
              "RX"
            ],
            "allMatchEventName": "ChangeOrderStatusToPV1Requested",
            "partialMatchEventName": "TriggerPV1AssociatedEvent",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "PV1_READY"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerPV1AssociatedEvent",
      "description": "Trigger PV1 associated events",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookToPV1BasedOnFacility",
          "props": {
            "webhookSettingName": "PV1WebhookEndPointURL"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckNonRxItemsFulfilmentCriteria"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "PV1VerifiedResponse",
      "description": "update order items status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FilterOutOrderItemsProcessedForPV1",
          "props": {
            "eventName": "PV1Verified",
            "acceptedStatuses": {
              "VERIFIED": [
                "PV1_READY"
              ]
            }
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PV1Verified",
      "description": "update order items status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemBasedOnPV1VerifiedResponse",
          "props": {
            "eventName": "UpdateKitItemInformationForPV1Items",
            "approvalStatusResponse": "VERIFIED:PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForPV1Verification",
            "orderLineStatus": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatusFromPV1Response",
          "props": {
            "statusList": [
              "VERIFIED"
            ],
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRespTimeFitsInExistingActiveSchedulerWindow",
          "props": {
            "noMatchEventName": "CheckOrderItemStatusAndReleaseFulfilment",
            "eventName": "CheckRxItemsFulfilmentCriteria",
            "attributeName": "pv1SchedulerWindow"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "PV1ExceptionResponse",
      "description": "update order items status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FilterOutOrderItemsProcessedForPV1",
          "props": {
            "eventName": "PV1Exception",
            "acceptedStatuses": {
              "EXCEPTION": [
                "PV1_READY"
              ]
            }
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PV1Exception",
      "description": "update order items status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemBasedOnPV1ExceptionResponse",
          "props": {
            "exceptionStatusResponse": "EXCEPTION:PV1_EXCEPTION"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForPV1Verification",
            "orderLineStatus": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatusFromPV1Response",
          "props": {
            "exceptionStatusResponse": "EXCEPTION",
            "statusList": [
              "EXCEPTION"
            ],
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRespTimeFitsInExistingActiveSchedulerWindow",
          "props": {
            "noMatchEventName": "CheckOrderItemStatusAndReleaseFulfilment",
            "eventName": "CheckRxItemsFulfilmentCriteria",
            "attributeName": "pv1SchedulerWindow"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "PV1ExceptionResolutionResponse",
      "description": "update order items status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FilterOutOrderItemsProcessedForPV1",
          "props": {
            "eventName": "PV1ExceptionResolution",
            "acceptedStatuses": {
              "CANCEL_PENDING": [
                "PV1_READY",
                "PV1_EXCEPTION"
              ],
              "ACTIVE": [
                "PV1_EXCEPTION"
              ]
            }
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PV1ExceptionResolution",
      "description": "update order items status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemBasedOnPV1ExceptionResolutionResponse",
          "props": {
            "exceptionResolutionStatusResponse": "ACTIVE:PV1_READY",
            "cancelStatusResponse": "CANCEL_PENDING:CANCELLED",
            "eventName": "UpdateKitItemInformationForPV1Items"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForPV1Verification",
            "orderLineStatus": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromPV1Response",
          "props": {
            "cancelStatus": "CANCEL_PENDING",
            "eventName": "SendOrderLineCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "UpdateOrderStatusFromPartialBasedOnCriteria",
            "statusList": [
              "PARTIALLY_PV1_VERIFIED"
            ],
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "UpdateOrderStatusAsPV1Cancelled",
            "partialMatchEventName": "CheckAnyLineItemIsCancelledAsPartOfPV1Response",
            "excludeStatusList": [
              ""
            ],
            "orderLineStatus": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatusFromPV1Response",
          "props": {
            "statusList": [
              "ACTIVE"
            ],
            "exceptionResolutionStatusResponse": "ACTIVE",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdatePV1OrderCancellationNotes",
          "props": {
            "eventName": "sendOrderNoteWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRespTimeFitsInExistingActiveSchedulerWindow",
          "props": {
            "noMatchEventName": "CheckOrderItemStatusAndReleaseFulfilment",
            "eventName": "CheckRxItemsFulfilmentCriteria",
            "attributeName": "pv1SchedulerWindow"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckAnyLineItemIsCancelledAsPartOfPV1Response",
      "description": "check any line item is cancelled as part of pv1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemCancelledAsPartOfPV1Response",
          "props": {
            "eventName": "TaxRecalculationForOrder",
            "pv1ResponseCancelStatus": "CANCEL_PENDING"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckRxItemsFulfilmentCriteria",
      "description": "check Rx items fulfilment criteria",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckRxItemsFulfilmentCriteria",
          "props": {
            "cancelledOrderItemStatus": "CANCELLED",
            "pv1VerifiedOrderItemStatus": "PV1_VERIFIED",
            "eventName": "CheckNonRxItemsFulfilmentCriteria",
            "attributeName": "isPV1RequestedAndVerified",
            "acceptedStatuses": [
              "PV1_VERIFIED",
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderItemStatusAndReleaseFulfilment",
      "description": "check order item and release for fulfilment",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.ReleaseRxAndNonRxItemsForFulfilment",
          "props": {
            "eventName": "CreateFulfilmentRequest",
            "acceptedStatuses": [
              "PV1_VERIFIED",
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateKitItemInformationForPV1Items",
      "description": "update kit item information for PV1 items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateKitItemInformationForPV1Items",
          "props": {
            "eventName": "UpdateInventoryWhenPV1PharmacyTransferOrCancelled"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateInventoryWhenPV1PharmacyTransferOrCancelled",
      "description": "update inventory after PV1",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityForPV1",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "RESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityForPV1",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "UNRESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateInventoryWhenPV1Cancelled",
      "description": "update inventory after PV1 cancellation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityForPV1",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "UNRESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusAsPV1Cancelled",
      "description": "update order cancelled after PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureCancelledOrderReasonFromPV1Response"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureCancelledOrderReasonFromPV1Response",
      "description": "Capture cancelled order reason from pv1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromPV1Response",
          "props": {
            "cancelStatusResponse": "CANCEL_PENDING",
            "eventName": "SendOrderCancellationEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForPV1Verification",
      "description": "Update order status based on verified items in order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatusOfRxTypeItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "approvalTypeList": [
              "RX"
            ],
            "allMatchEventName": "UpdateOrderStatusAsPV1Verified",
            "partialMatchEventName": "UpdateOrderStatusAsPartialPV1Verified",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "PV1_VERIFIED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusAsPV1Verified",
      "description": "update order status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusAsPartialPV1Verified",
      "description": "update order status from PV1 response",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckNonRxItemsFulfilmentCriteria",
      "description": "Check non rx items fulfilment criteria",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckNonRxItemsFulfilmentCriteria",
          "props": {
            "approvalTypeList": [
              "RX"
            ],
            "eventName": "CreateFulfilmentRequest",
            "matchingStatusList": [
              "ALLOCATED"
            ],
            "ignoreRxItemsOnStatusList": [
              "CANCELLED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateFulfilmentRequest",
      "description": "Capture the facility and items data and make a request for fulfillment",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineAttributeForProcessedPV1Items",
          "props": {}
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckAttributeNameExists",
          "props": {
            "noMatchEventName": "CreatePaymentAuthAttribute",
            "eventName": "CheckOrderPaymentAuthCompleted",
            "attributeName": "isOrderPaymentAuthCompleted"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreatePaymentAuthAttribute",
      "description": "Create Payment Auth attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddEventAttributesToEntity",
          "props": {
            "attributeNames": [
              "isOrderPaymentAuthCompleted"
            ],
            "attributeTypes": [
              "STRING"
            ],
            "attributeDefaultValues": [
              "false"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "InitiateSalesTaxRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "InitiateSalesTaxRequest",
      "description": "Update order status and trigger sales tax request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.TaxRecalculationForOrder",
          "props": {
            "eventName": "DO_NOTHING",
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PAYMENT_AUTH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PAYMENT_AUTH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendSalesTaxRequest"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendSalesTaxRequest",
      "description": "Send order tax request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "OrderTaxWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SalesTaxResponse",
      "description": "fetch the sales tax response and update the attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnSalesTaxResponse",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TaxRecalculationForOrderAfterSalesTaxResponse"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TaxRecalculationForOrderAfterSalesTaxResponse",
      "description": "Send order tax request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.TaxRecalculationForOrder",
          "props": {
            "eventName": "DO_NOTHING",
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendSalesTaxUpdatedEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddEventAttributesToEntity",
          "props": {
            "attributeNames": [
              "isSalesTaxResponseHandled"
            ],
            "attributeTypes": [
              "STRING"
            ],
            "attributeDefaultValues": [
              "true"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderAttributeNameAndValueMatches",
          "props": {
            "noMatchEventName": "CreatePaymentAuthRequest",
            "attributeValue": "true",
            "eventName": "HandleProcessedPv1Items",
            "attributeName": "isNoChargeOrder"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendSalesTaxUpdatedEvent",
      "description": "Send order sales tax update webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "OrderSalesTaxUpdateWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreatePaymentAuthRequest",
      "description": "Send payment auth request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreatePaymentAuthRequestForOrder",
          "props": {
            "eventName": "SendPaymentAuthRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendPaymentAuthRequest",
      "description": "Send payment auth request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendPaymentAuthRequestWebhook",
          "props": {
            "webhookSettingName": "PaymentAuthWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PaymentAuthResponse",
      "description": "fetch the payment auth response and update the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnOrderPaymentAuthResponse",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "eventName": "CreateFinancialTransactionForOrder",
            "failurePaymentStatus": "FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateFinancialTransactionForOrder",
      "description": "Create financial transaction",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateFinancialTransaction",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "currency": "USD",
            "type": "PAYMENT",
            "paymentStatus": "AUTH",
            "failurePaymentStatus": "FAILED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventBasedOnTransactionStatus",
          "props": {
            "noMatchEventName": "InitiateCreditCardUpdateProcess",
            "failedTransactionStatus": [
              "FAILED",
              "NOT_ALLOWED"
            ],
            "eventName": "HandleProcessedPv1Items",
            "authorizedTransactionStatus": "SUCCESSFUL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "InitiateCreditCardUpdateProcess",
      "description": "Initiate the credit card update process",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckAttributeNameExists",
          "props": {
            "noMatchEventName": "CreateCreditCardAttribute",
            "eventName": "ChangedOrderStatusToAuthFailed",
            "attributeName": "isCreditCardUpdated"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateCreditCardAttribute",
      "description": "Create the credit card attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "StartSchedulerForCreditCardUpdateTrigger"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "StartSchedulerForCreditCardUpdateTrigger",
      "description": "Called upon payment auth failure, get waiting time period and schedule the cancellation if credit card details not updated within time period.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendScheduledEventBasedOnSetting",
          "props": {
            "unit": "S",
            "scheduledEventName": "CancelOrderIfCreditCardDetailsNotUpdated",
            "eventName": "CreateCreditCardUpdateSchedulerWindow",
            "settingName": "PostAuthFailureCreditCardUpdateWaitingTime"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "ChangedOrderStatusToAuthFailed"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateCreditCardUpdateSchedulerWindow",
      "description": "Create credit card update scheduler window",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateSchedulerWindow",
          "props": {
            "unit": "S",
            "attributeName": "creditCardUpdateSchedulerWindow",
            "settingName": "PostAuthFailureCreditCardUpdateWaitingTime"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CancelOrderIfCreditCardDetailsNotUpdated",
      "description": "Create credit card update scheduler window",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.ConstructCancelOrderFromConsoleAttributes",
          "props": {
            "eventName": "OrderCancel",
            "cancelledBy": "ORDER_CANCELLATION_SCHEDULER",
            "cancelReason": "CC_DECLINE_NO_CLIENT_RESPONSE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangedOrderStatusToAuthFailed",
      "description": "update order status to auth failed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PAYMENT_AUTH_FAILED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PAYMENT_AUTH_FAILED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddEventAttributesToEntity",
          "props": {
            "attributeNames": [
              "isCreditCardUpdated"
            ],
            "attributeTypes": [
              "STRING"
            ],
            "attributeDefaultValues": [
              "false"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreditCardUpdateResponse",
      "description": "Handle the updated credit card response data and initiate the sales tax request again",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateCreditCard",
          "props": {
            "eventName": "CreatePaymentAuthRequestAfterStatusChange"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddEventAttributesToEntity",
          "props": {
            "attributeNames": [
              "isCreditCardUpdated"
            ],
            "attributeTypes": [
              "STRING"
            ],
            "attributeDefaultValues": [
              "true"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreatePaymentAuthRequestAfterStatusChange",
      "description": "Create payment auth request after status change",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PAYMENT_AUTH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PAYMENT_AUTH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CreatePaymentAuthRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_FAILED"
        }
      ]
    },
    {
      "userActions": [
        {
          "context": [
            {
              "confirm": true,
              "label": "PAYMENT AUTHENTICATION RETRIGGER",
              "type": "PRIMARY",
              "modules": [
                "adminconsole"
              ]
            }
          ],
          "attributes": []
        }
      ],
      "subtype": "HD",
      "name": "CreatePaymentAuthRequestFromConsole",
      "description": "Create payment auth request after status change",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PAYMENT_AUTH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PAYMENT_AUTH_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CreatePaymentAuthRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderPaymentAuthCompleted",
      "description": "Check Order Payment Auth completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderAttributeNameAndValueMatches",
          "props": {
            "noMatchEventName": "ChangeOrderStatusToPaymentAuthRequested",
            "attributeValue": "true",
            "eventName": "ReleaseCreateFulfilmentRequest",
            "attributeName": "isOrderPaymentAuthCompleted"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPaymentAuthRequested",
      "description": "Change order status to payment auth requested",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PAYMENT_AUTH_REQUESTED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "HandleProcessedPv1Items",
      "description": "Handle processed PV1 items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddEventAttributesToEntity",
          "props": {
            "attributeNames": [
              "isOrderPaymentAuthCompleted"
            ],
            "attributeTypes": [
              "STRING"
            ],
            "attributeDefaultValues": [
              "true"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.HandleProcessedPv1Items",
          "props": {
            "eventName": "ReleaseCreateFulfilmentRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ReleaseCreateFulfilmentRequest",
      "description": "Release the create Fulfilment request data",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineStatusForFulfilmentEligibleItems",
          "props": {
            "toLineItemStatus": "FULFILMENT_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "CheckOrderIsInPartialFulfilmentProcessing",
            "statusList": [
              "PAYMENT_AUTH_REQUESTED"
            ],
            "eventName": "UpdateOrderStatusBasedOnItemsStatusForFFProcessing"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendWebhookForFulfilmentRequest",
      "description": "call the webhook for fulfillment request",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookForFulfillmentCreationRequest",
          "props": {
            "webhookSettingName": "FulfillmentCreateRequestWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusBasedOnItemsStatusForFFProcessing",
      "description": "Update order status after create ff webhook request is sent",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToFulfillmentProcessing",
            "partialMatchEventName": "ChangeOrderStatusToPartialFulfillmentProcessing",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "FULFILMENT_REQUESTED",
              "FULFILMENT_ASSIGNED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToFulfillmentProcessing",
      "description": "update the order and item status after fulfillment creation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "FULFILMENT_PROCESSING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "FULFILMENT_PROCESSING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerFulfilmentAssociatedEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPartialFulfillmentProcessing",
      "description": "update the order and item status after fulfillment creation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_FULFILMENT_PROCESSING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_FULFILMENT_PROCESSING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerFulfilmentAssociatedEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderIsInPartialFulfilmentProcessing",
      "description": "Check order in partial fulfilment processing",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderStatusMatchesList",
          "props": {
            "noMatchEventName": "TriggerFulfilmentAssociatedEvent",
            "statusList": [
              "PARTIALLY_FULFILMENT_PROCESSING"
            ],
            "eventName": "CheckPartialFulfilmentProcessingCriteria"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckPartialFulfilmentProcessingCriteria",
      "description": "Check order partial fulfilment processing criterias",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToFulfillmentProcessing",
            "partialMatchEventName": "TriggerFulfilmentAssociatedEvent",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "FULFILMENT_REQUESTED",
              "FULFILMENT_ASSIGNED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerFulfilmentAssociatedEvent",
      "description": "Trigger ff associated events",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateFulfillmentRequestPayload",
          "props": {
            "eventName": "SendWebhookForFulfilmentRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfillmentCreationResponse",
      "description": "receieve the dvm response and create the fulfillment",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateFulfillment",
          "props": {
            "eventName": "UpdateLineStatusAfterFulfillmentCreation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateLineStatusAfterFulfillmentCreation",
      "description": "update the line item status after fulfillment creation",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemStatusAfterFulfillmentCreation",
          "props": {
            "toLineItemStatus": "FULFILMENT_ASSIGNED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusFromPartialBasedOnCriteria",
      "description": "update order status from partial to full based on criteria\u0027s",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckStatusCriteriaForPartialPharmacyAllocated"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckStatusCriteriaForPartialPV1Requested"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckStatusCriteriaForPartialPV1Verified"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckStatusCriteriaForPartialFFProcessing"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckStatusCriteriaForPartialShipped"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckStatusCriteriaForPartialCompleted"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckStatusCriteriaForPartialPharmacyAllocated",
      "description": "check order status for partial pharmacy allocated",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToPharmacyAllocatedFromPartial",
            "partialMatchEventName": "DO_NOTHING",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "ALLOCATED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPharmacyAllocatedFromPartial",
      "description": "Change order status from partial to full pharmacy callocated",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PHARMACY_ALLOCATED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckStatusCriteriaForPartialPV1Requested",
      "description": "check order status for partial pv1 requested",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatusOfRxTypeItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "approvalTypeList": [
              "RX"
            ],
            "allMatchEventName": "ChangeOrderStatusToPV1RequestedFromPartial",
            "partialMatchEventName": "DO_NOTHING",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "PV1_READY"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPV1RequestedFromPartial",
      "description": "Change order status from partial pv1 requested to full",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PV1_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PV1_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckStatusCriteriaForPartialPV1Verified",
      "description": "check order status for partial pv1 verified",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatusOfRxTypeItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "approvalTypeList": [
              "RX"
            ],
            "allMatchEventName": "UpdateOrderStatusAsPV1VerifiedFromPartial",
            "partialMatchEventName": "DO_NOTHING",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "PV1_VERIFIED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusAsPV1VerifiedFromPartial",
      "description": "Change order status from partial pv1 verified to full",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PV1_VERIFIED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckStatusCriteriaForPartialFFProcessing",
      "description": "check order status for partial ff processing",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToFFProcessingFromPartial",
            "partialMatchEventName": "DO_NOTHING",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "FULFILMENT_REQUESTED",
              "FULFILMENT_ASSIGNED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToFFProcessingFromPartial",
      "description": "Change order status from partial FF processing to full",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "FULFILMENT_PROCESSING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "FULFILMENT_PROCESSING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckStatusCriteriaForPartialShipped",
      "description": "check order status for partial shipped",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToShippedFromPartial",
            "partialMatchEventName": "DO_NOTHING",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "SHIPPED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToShippedFromPartial",
      "description": "Change order status from partial shipped verified to full",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckStatusCriteriaForPartialCompleted",
      "description": "check order status for partial completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingOrderItemAttributeAndStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "attributeValue": "true",
            "allMatchEventName": "ChangeOrderStatusToCompletedFromPartial",
            "partialMatchEventName": "DO_NOTHING",
            "attributeName": "isPaymentSettlementCompleted",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": "SHIPPED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToCompletedFromPartial",
      "description": "Change order status from partial pv1 verified to full",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "OrderCancelAfterNoRxApproval",
      "description": "check any pending line item exists in order and cancel it",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventIfAnyLineItemStatusMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "TriggerAutoCancellationLogic",
            "orderLineStatus": "RX_PENDING"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerAutoCancellationLogic",
      "description": "Trigger the auto cancellation logic",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.OrderItemCancellationBasedOnItemStatus",
          "props": {
            "orderLineStatus": "RX_PENDING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineItemCancellationReason",
          "props": {
            "reasonForCancellation": "RX_REQUEST_EXPIRED",
            "orderLineStatus": "RX_PENDING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromAutoCancellation",
          "props": {
            "cancellationReason": "RX_REQUEST_EXPIRED",
            "eventName": "SendOrderLineCancellationEvent",
            "orderLineStatus": "RX_PENDING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderLineItemsInOrder",
          "props": {
            "toLineItemStatus": "CANCELLED",
            "eventName": "DO_NOTHING",
            "fromLineItemStatus": "RX_PENDING"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateOrderStatusFromPartialBasedOnCriteria"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToCancelledFromAutoCancellation",
            "partialMatchEventName": "TriggerOrderTaxRecalculationLogicAndCancellationWebhooks",
            "excludeStatusList": [
              ""
            ],
            "orderLineStatus": [
              "CANCELLED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerOrderTaxRecalculationLogicAndCancellationWebhooks",
      "description": "trigger order tax recalculation logic when items are cancelled in the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TaxRecalculationForOrder"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerCancellationRelatedWebhooks"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToCancelledFromAutoCancellation",
      "description": "cancel the order and update the line item information",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromProperty",
          "props": {
            "cancellationReason": "RX_REQUEST_EXPIRED",
            "eventName": "SendOrderCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TriggerCancellationRelatedWebhooks"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TriggerCancellationRelatedWebhooks",
      "description": "Trigger cancellation related webhooks",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAutoOrderCancellationNotes",
          "props": {
            "noteText": "Auto order Item cancellation",
            "eventName": "sendOrderNoteWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RX_HOLD"
        },
        {
          "status": "CANCELLED"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [
        {
          "context": [
            {
              "confirm": true,
              "label": "CANCEL ORDER",
              "type": "PRIMARY",
              "modules": [
                "adminconsole"
              ]
            }
          ],
          "attributes": [
            {
              "defaultValue": "",
              "name": "cancelReason",
              "label": "Cancellation Reason",
              "source": "settings.OrderCancellationReasonSource",
              "type": "STRING",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "cancelledBy",
              "label": "Cancelled By",
              "type": "STRING",
              "mandatory": true
            }
          ]
        }
      ],
      "subtype": "HD",
      "name": "OrderCancel",
      "description": "Order is Cancelled from admin console",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityForOrderCancel",
          "props": {
            "lineStatus": "CANCELLED",
            "eventName": "UpdateInventoryQty",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromAdmin",
          "props": {
            "eventName": "SendOrderLineCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CancelAllLineItemsAndUpdateLineItemStatusInOrder",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateEventAttributesToOrderAttributes",
          "props": {
            "eventAttributesList": [
              "cancelReason",
              "cancelledBy"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderCancellationNotes",
          "props": {
            "eventName": "sendOrderNoteWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromAdmin",
          "props": {
            "eventName": "SendOrderCancellationEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "sendOrderNoteWebhook",
      "description": "call the order note webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookWithAttributes",
          "props": {
            "webhookSettingName": "OrderNotesWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "CANCELLED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendOrderCancellationEvent",
      "description": "call the webhook with order cancellation reason",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookForOrderCancellationReason",
          "props": {
            "webhookSettingName": "OrderCancellationReasonWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "CANCELLED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendOrderLineCancellationEvent",
      "description": "call the webhook with order item cancellation reason",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookForOrderItemCancellation",
          "props": {
            "webhookSettingName": "OrderItemCancellationReasonWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "CANCELLED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureOrderChangeStatus",
      "description": "call the webhook when order status change",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderStatus",
          "props": {
            "eventName": "SendOrderStatusWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        },
        {
          "status": "COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendOrderStatusWebhook",
      "description": "call the webhook when order status change",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookForOrderStatus",
          "props": {
            "webhookSettingName": "OrderStatusChangeWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        },
        {
          "status": "COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendOrderItemStatusWebhook",
      "description": "call the webhook when order item status change",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhookForOrderItemStatus",
          "props": {
            "webhookSettingName": "OrderItemStatusChangeWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateOrderNote",
      "description": "capture the order note and update the orderNotes order attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderNotes",
          "props": null
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TaxRecalculationForOrder",
      "description": "Recalculate the tax for the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.TaxRecalculationForOrder",
          "props": {
            "eventName": "DO_NOTHING",
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [
        {
          "context": [
            {
              "confirm": true,
              "label": "Add Note",
              "type": "SECONDARY",
              "modules": [
                "adminconsole"
              ]
            }
          ],
          "attributes": [
            {
              "defaultValue": "",
              "name": "userKey",
              "label": "Note created by",
              "source": "",
              "type": "STRING",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "noteContext",
              "label": "Note context type",
              "source": "",
              "type": "STRING",
              "mandatory": false
            },
            {
              "defaultValue": "",
              "name": "note",
              "label": "Note",
              "source": "",
              "type": "STRING",
              "mandatory": true
            }
          ]
        }
      ],
      "subtype": "HD",
      "name": "CreateOrderNoteFromAdminConsole",
      "description": "create the order note from admin console",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateOrderNotes",
          "props": {
            "eventAttributesList": [
              "userKey",
              "noteContext",
              "note"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "PAYMENT_AUTH_REQUESTED"
        },
        {
          "status": "PAYMENT_AUTH_FAILED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        },
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CREATE",
      "description": "Fulfilment entity creation which will change the status to depending on fulfillable quantities and notify the inventory catalogue to reserve stock. The fulfilment type is identified and set as an attribute.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddFulfilmentTypeAttributeToFulfilment",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentCreatedEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateFulfillmentStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendFulfilmentCreatedEvent",
      "description": "Send FF creatation webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "FulfilmentCreatedWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateFulfillmentStatus",
      "description": "update fulfillment status based on event attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingFulfillmentAttribute",
          "props": {
            "noMatchEventName": "ChangeFulfillmentStatusToExceptionFromCreation",
            "exceptionStatus": "EXCEPTION",
            "eventName": "ChangeFulfilmentStatusToPickReady",
            "assignedStatus": "WAITING_FULFILMENT"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeFulfillmentStatusToExceptionFromCreation",
      "description": "change fulfillment status to exception",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "EXCEPTION"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeFulfilmentStatusToPickReady",
      "description": "update the fulfilment status to authorized",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PICK_READY"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendPickReadyInstructionToDVM"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "CREATED"
        },
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendPickReadyInstructionToDVM",
      "description": "Send pick ready instruction webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendCreatePickReadyInstructionWebhook",
          "props": {
            "webhookSettingName": "PickReadyInstructionWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfillmentExceptionResponse",
      "description": "This response will put the fulfilment to exception while pick_pack.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnExceptionResponse",
          "props": {
            "exceptionStatusResponse": "EXCEPTION",
            "eventName": "ChangeFulfillmentStatusToExceptionfromPickReady"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeFulfillmentStatusToExceptionfromPickReady",
      "description": "change fulfillment status to exception from pick ready",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "EXCEPTION"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfillmentExceptionResolutionResponse",
      "description": "This response will resolve the exception and put the fulfilment to either pick_ready or assigned.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnExceptionResolutionResponse",
          "props": {
            "eventNameForResolutionWhilePickPack": "ChangedFulfilmentStatusToPickReadyWithoutTriggers",
            "eventNameForResolutionWhileFulfilmentCreation": "ChangeFulfilmentStatusToPickReady",
            "eventNameForRejectedFulfilment": "InventoryUpdateForRejectedFulfilment",
            "filledStatus": "ACTIVE",
            "rejectedStatus": "CANCEL_PENDING",
            "eventNameForRejectedFulfilmentAfterPickReady": "InventoryUpdateForRejectedFulfilmentAfterPickReady"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAndSendEventForCancelledItems",
          "props": {
            "cancelStatusResponse": "CANCEL_PENDING",
            "eventName": "SendEventOnOrderForExceptionResolution"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangedFulfilmentStatusToPickReadyWithoutTriggers",
      "description": "update the fulfilment status to PICK_READY",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PICK_READY"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "InventoryUpdateForRejectedFulfilmentAfterPickReady",
      "description": "Update the correction items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.InventoryUpdateFromFulfilmentExceptionResolutionResponse",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "rejectedStatus": "CANCEL_PENDING",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "ChangeFulfilmentStatusToRejected"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "InventoryUpdateForRejectedFulfilment",
      "description": "inventory update for rejected FF",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.InventoryUpdateFromFulfilmentExceptionResolutionResponse",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "rejectedStatus": "CANCEL_PENDING",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "ChangeFulfilmentStatusToRejected"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeFulfilmentStatusToRejected",
      "description": "Update FF status to REJECTED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "REJECTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendEventOnOrderForExceptionResolution",
      "description": "Send webhook for cancelled item for exception resolution",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForOrder",
          "props": {
            "eventName": "SendWebhooksForCancelledItemForExceptionResolution"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "REJECTED"
        },
        {
          "status": "PICK_READY"
        },
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendWebhooksForCancelledItemForExceptionResolution",
      "description": "fetch the ship confirmation response and update the fulfilment attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.TaxRecalculationForOrder",
          "props": {
            "eventName": "DO_NOTHING",
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForFulfillment",
          "props": {
            "eventName": "FulfilmentChargeCalculationAfterExceptionResolution"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromExceptionResolution",
          "props": {
            "cancelStatusResponse": "CANCEL_PENDING",
            "eventName": "SendOrderLineCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateOrderStatusFromPartialBasedOnCriteria"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToCancelledOnExceptionResolution",
            "partialMatchEventName": "DO_NOTHING",
            "excludeStatusList": [
              ""
            ],
            "orderLineStatus": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderNotesOnExceptionResolution",
          "props": {
            "eventName": "sendOrderNoteWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        },
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfilmentChargeCalculationAfterExceptionResolution",
      "description": "calculate the fulfillment charges",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FulfillmentChargesCalculation",
          "props": {
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "EXCEPTION"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToCancelledOnExceptionResolution",
      "description": "cancel the order and update the line item information on exception resolution.",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromExceptionResolution",
          "props": {
            "eventName": "SendOrderCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckOrderEligibleForAuthReversal"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ShipmentResponse",
      "description": "fetch the ship confirmation response and update the fulfilment items and attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnShipConfirmationResponse",
          "props": {
            "eventName": "CheckConfirmedAndCancelledFulfilmentItems"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckConfirmedAndCancelledFulfilmentItems",
      "description": "find confirmed and cancelled fulfilments items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckForConfirmedItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "UpdateConfirmedShipOrderItems"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckForCancelledItems",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "UpdateCancelledShipOrderItemsAndSendInventoryEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateConfirmedShipOrderItems",
      "description": "call order workflow to update order line items",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForOrder",
          "props": {
            "eventName": "UpdateOrderItemsAfterShipConfirmation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderItemsAfterShipConfirmation",
      "description": "capture the order and order item status change and update the order item",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderItemStatusBeforeUpdateItem",
          "props": {
            "eventName": "DO_NOTHING"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineItemInvolvedInFulfilment",
          "props": {
            "toLineItemStatus": "SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureChangedOrderItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "eventName": "SendOrderItemStatusWebhook"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToShipped",
            "partialMatchEventName": "ChangeOrderStatusToPartialShipped",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": [
              "SHIPPED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventToUpdateInventoryQuantityAfterShipmentResponse",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "operation": "RESET_RESERVE",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForFulfillment",
          "props": {
            "eventName": "ChangeFulfilmentStatusToShipped"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToShipped",
      "description": "update the order status and capture the activity",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPartialShipped",
      "description": "update the order status and capture the order activity",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeFulfilmentStatusToShipped",
      "description": "Update FF status to SHIPPED",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "SHIPPED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentShippedEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendScheduledEvent",
          "props": {
            "delay": 5,
            "eventName": "SendInvoiceTaxRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendFulfilmentShippedEvent",
      "description": "Send fulfilment shipped update webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "FulfilmentShippedWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendInvoiceTaxRequest",
      "description": "Send invoice tax request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendFulfillmentWebhook",
          "props": {
            "webhookSettingName": "InvoiceTaxWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateCancelledShipOrderItemsAndSendInventoryEvent",
      "description": "jump to order workflow for order item update",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForOrder",
          "props": {
            "eventName": "UpdateOrderItemsAfterShipResponseToCancelled"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.InventoryUpdateFromFulfilmentShipmentResponse",
          "props": {
            "eventName": "UpdateInventoryQty",
            "retailerId": "1",
            "inventoryCatalogueRef": "{{fluent.inventory.catalogue.ref}}"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderItemsAfterShipResponseToCancelled",
      "description": "fetch the ship confirmation response and update the fulfilment attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineItemInvolvedInFulfilment",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "TaxRecalculationForOrderAfterShipItemsCancellation"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateLineItemCancellationReasonFromShipConfirmation",
          "props": {
            "reasonForCancellation": "item rejected by 3PL"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderItemReasonFromShipmentCancellation",
          "props": {
            "cancellationReason": "item rejected by 3PL",
            "eventName": "SendOrderLineCancellationEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "UpdateOrderStatusFromPartialBasedOnCriteria"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllOrderLineStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "allMatchEventName": "ChangeOrderStatusToCancelledFromShipmentResponse",
            "partialMatchEventName": "CaptureCancellationNotesFromShipmentResponse",
            "excludeStatusList": [
              ""
            ],
            "orderLineStatus": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForFulfillment",
          "props": {
            "eventName": "UpdateFulfilmentStatusAfterShipmentCancellation"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TaxRecalculationForOrderAfterShipItemsCancellation",
      "description": "Recalculate the tax for the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.TaxRecalculationForOrder",
          "props": {
            "eventName": "DO_NOTHING",
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForFulfillment",
          "props": {
            "eventName": "FulfillmentChargeCalculationAfterShipResponse"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfillmentChargeCalculationAfterShipResponse",
      "description": "calculate the fulfillment charges",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FulfillmentChargesCalculation",
          "props": {
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToCancelledFromShipmentResponse",
      "description": "Capture the order activity and update the status",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "CANCELLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureCancellationNotesFromShipmentResponse"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureCancelledOrderReasonFromProperty"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CheckOrderEligibleForAuthReversal"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureCancellationNotesFromShipmentResponse",
      "description": "fetch the ship confirmation response and update the fulfilment attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateShipOrderCancellationNotes",
          "props": {
            "noteText": "item rejected by 3PL",
            "eventName": "sendOrderNoteWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        },
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureCancelledOrderReasonFromProperty",
      "description": "capture the cancelled order reason from property",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureCancelledOrderReasonFromProperty",
          "props": {
            "cancellationReason": "item rejected by 3PL",
            "eventName": "SendOrderCancellationEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CheckOrderEligibleForAuthReversal",
      "description": "check for order is ready for auth reversal",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderAttributeNameAndValueMatches",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "attributeValue": "true",
            "eventName": "CreatePaymentAuthReversalRequest",
            "attributeName": "isOrderPaymentAuthCompleted"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreatePaymentAuthReversalRequest",
      "description": "create the payment auth reversal request",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateOrderPaymentAuthReversalRequest",
          "props": {
            "eventName": "SendPaymentAuthReversalRequestWebhook"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendPaymentAuthReversalRequestWebhook",
      "description": "send the webhook for payment auth reversal request",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendPaymentAuthReversalWebhook",
          "props": {
            "webhookSettingName": "PaymentAuthReversalRequestWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PaymentAuthReversalResponse",
      "description": "fetch the response for payment auth reversal and update the attributes",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnOrderPaymentAuthReversalResponse",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "eventName": "CreateFinancialTransactionAfterAuthReversal",
            "failurePaymentStatus": "FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreateFinancialTransactionAfterAuthReversal",
      "description": "create the financial transaction after auth reversal",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateFinancialTransaction",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "currency": "USD",
            "type": "PAYMENT",
            "paymentStatus": "AUTH_REVERSAL",
            "failurePaymentStatus": "FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateFulfilmentStatusAfterShipmentCancellation",
      "description": "Update the fulfilment status",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingAllFulfilmentItemStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "fulfilmentLineStatus": "DELETED",
            "eventName": "ChangeFulfilmentStatusToRejected"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PICK_READY"
        },
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "InvoiceTaxResponse",
      "description": "fetch the invoice tax response and update the attribute",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnInvoiceTaxResponse",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateTaxAttributeBasedOnInvoiceTaxResponse",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForOrder",
          "props": {
            "eventName": "TaxRecalculationForOrderAfterInvoiceTax"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "TaxRecalculationForOrderAfterInvoiceTax",
      "description": "Recalculate the tax for the order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.TaxRecalculationForOrder",
          "props": {
            "eventName": "DO_NOTHING",
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForFulfillment",
          "props": {
            "eventName": "FulfillmentChargeCalculationAfterInvoiceTaxResponse"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "CANCELLED"
        },
        {
          "status": "CREATED"
        },
        {
          "status": "FRAUD_REVIEW"
        },
        {
          "status": "FRAUD_REVIEW_HOLD"
        },
        {
          "status": "RX_MATCH_REQUESTED"
        },
        {
          "status": "RX_HOLD"
        },
        {
          "status": "RX_MATCH_COMPLETED"
        },
        {
          "status": "PARTIAL_RX_MATCH_COMPLETED"
        },
        {
          "status": "PHARMACY_ALLOCATED"
        },
        {
          "status": "PARTIALLY_PHARMACY_ALLOCATED"
        },
        {
          "status": "PV1_REQUESTED"
        },
        {
          "status": "PARTIALLY_PV1_REQUESTED"
        },
        {
          "status": "PV1_VERIFIED"
        },
        {
          "status": "PARTIALLY_PV1_VERIFIED"
        },
        {
          "status": "FULFILMENT_PROCESSING"
        },
        {
          "status": "PARTIALLY_FULFILMENT_PROCESSING"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "FulfillmentChargeCalculationAfterInvoiceTaxResponse",
      "description": "Calculate the fulfillment charges",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.FulfillmentChargesCalculation",
          "props": {
            "ignoreOrderItemStatusList": [
              "CANCELLED"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderAttributeNameAndValueMatches",
          "props": {
            "noMatchEventName": "CreatePaymentSettlementRequest",
            "attributeValue": "true",
            "eventName": "UpdateOrderItemAsPaymentSettelementCompleted",
            "attributeName": "isNoChargeOrder"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderItemAsPaymentSettelementCompleted",
      "description": "Update the order item involved in fulfilment as payment settlement completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemAsPaymentSettlementCompleted",
          "props": {
            "eventName": "UpdateFulfilmentStatusToFulfilled"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateFulfilmentStatusToFulfilled",
      "description": "Update the fulfilment status to completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "FULFILLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForOrder",
          "props": {
            "eventName": "UpdateOrderStatusAfterPaymentSettlement"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CreatePaymentSettlementRequest",
      "description": "Send payment settlement request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreatePaymentSettlementRequest",
          "props": {
            "eventName": "UpdateFulfilmentStatusAndSendWebhookRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateFulfilmentStatusAndSendWebhookRequest",
      "description": "Update the fulfilment status and call next event",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PAYMENT_SETTLEMENT_REQUESTED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentInvoiceTaxUpdateEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendPaymentSettlementRequest"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendFulfilmentInvoiceTaxUpdateEvent",
      "description": "Send fulfilment invoice tax update webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "FulfilmentInvoiceTaxUpdateWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendPaymentSettlementRequest",
      "description": "Send payment settlement request webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendPaymentSettlementRequestWebhook",
          "props": {
            "webhookSettingName": "PaymentSettlementWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PaymentSettlementResponse",
      "description": "Fetch the payment settlement response and update the fulfilment",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateAttributeBasedOnPaymentSettlementResponse",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "eventName": "UpdateOrderItemAfterPaymentSettlementResponse",
            "failurePaymentStatus": "FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        },
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderItemAfterPaymentSettlementResponse",
      "description": "Update the order item involved in fulfilment",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateOrderItemBasedOnPaymentSettlementResponse",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "eventName": "UpdateFulfilmentStatusAfterPaymentSettlement",
            "failurePaymentStatus": "FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        },
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateFulfilmentStatusAfterPaymentSettlement",
      "description": "Update the fulfilment status",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventBasedOnFulfilmentStatus",
          "props": {
            "noMatchEventName": "ChangedFulfilmentStatusToSettlementFailed",
            "failedFulfilmentStatus": [
              "FAILED",
              "NOT_ALLOWED"
            ],
            "authorizedFulfilmentStatus": "SUCCESSFUL",
            "eventName": "ChangedFulfilmentStatusToCompleted"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateFinancialTransaction",
          "props": {
            "successPaymentStatus": "SUCCESSFUL",
            "currency": "USD",
            "type": "PAYMENT",
            "paymentStatus": "SETTLEMENT",
            "failurePaymentStatus": "FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        },
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangedFulfilmentStatusToCompleted",
      "description": "Update the fulfilment status to completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "FULFILLED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureSettledPaymentData"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CalculateMaxRefundAmountAndUpdateOrderAttribute",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckOrderAttributeNameAndValueMatches",
          "props": {
            "noMatchEventName": "UpdateReturnableQuantity",
            "attributeValue": "true",
            "eventName": "DO_NOTHING",
            "attributeName": "isAppeasementInitiated"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventForOrder",
          "props": {
            "eventName": "UpdateOrderStatusAfterPaymentSettlement"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        },
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateReturnableQuantity",
      "description": "Update Returnable quantity for the items in the fulfilment",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.UpdateReturnableQtyAttribute",
          "props": null
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        },
        {
          "status": "SETTELMENT_FAILED"
        },
        {
          "status": "FULFILLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangedFulfilmentStatusToSettlementFailed",
      "description": "update the fulfilment status to settlement failed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "SETTELMENT_FAILED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureFailedPaymentData"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "SendFulfilmentStatusUpdateEvent"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateOrderStatusAfterPaymentSettlement",
      "description": "update order status after payment settlement",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendEventOnVerifyingOrderItemAttributeAndStatus",
          "props": {
            "noMatchEventName": "DO_NOTHING",
            "attributeValue": "true",
            "allMatchEventName": "ChangeOrderStatusToCompleted",
            "partialMatchEventName": "ChangeOrderStatusToPartialCompleted",
            "attributeName": "isPaymentSettlementCompleted",
            "excludeStatusList": [
              "CANCELLED"
            ],
            "orderLineStatus": "SHIPPED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToCompleted",
      "description": "Update order status to completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ChangeOrderStatusToPartialCompleted",
      "description": "Update order status to partially completed",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CaptureOrderActivity",
          "props": {
            "toLineItemStatus": "PARTIALLY_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.ChangeStateGQL",
          "props": {
            "status": "PARTIALLY_COMPLETED"
          }
        },
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.SendEventGQL",
          "props": {
            "eventName": "CaptureOrderChangeStatus"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "SHIPPED"
        },
        {
          "status": "PARTIALLY_SHIPPED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureSettledPaymentData",
      "description": "Capture the settled payment data and trigger the webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CapturePaymentData",
          "props": {
            "eventName": "SendPaymentDataWebhook",
            "paymentStatus": "SETTLED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "FULFILLED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "CaptureFailedPaymentData",
      "description": "Capture the failed payment data and trigger the webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CapturePaymentData",
          "props": {
            "eventName": "SendPaymentDataWebhook",
            "paymentStatus": "SETTLEMENT_FAILED"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendPaymentDataWebhook",
      "description": "Capture the payment data and trigger the webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendCapturePaymentDataWebhook",
          "props": {
            "webhookSettingName": "CapturedPaymentDataWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "FULFILLED"
        },
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "SendFulfilmentStatusUpdateEvent",
      "description": "Send fulfilment status update webhook",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.SendWebhook",
          "props": {
            "webhookSettingName": "FulfilmentStatusUpdateWebhookEndPointURL"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "FULFILMENT",
      "triggers": [
        {
          "status": "EXCEPTION"
        },
        {
          "status": "PICK_READY"
        },
        {
          "status": "SHIPPED"
        },
        {
          "status": "PAYMENT_SETTLEMENT_REQUESTED"
        },
        {
          "status": "FULFILLED"
        },
        {
          "status": "PARTIALLY_FULFILLED"
        },
        {
          "status": "REJECTED"
        },
        {
          "status": "SETTELMENT_FAILED"
        }
      ]
    },
    {
      "userActions": [
        {
          "context": [
            {
              "confirm": false,
              "label": "INITIATE REFUND",
              "type": "PRIMARY",
              "modules": [
                "adminconsole"
              ]
            }
          ],
          "attributes": [
            {
              "defaultValue": "",
              "name": "userId",
              "label": "User ID",
              "source": "",
              "type": "STRING",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "returnReason",
              "label": "Refund Reason",
              "source": "settings.ReturnReasonSource",
              "type": "STRING",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "returnItems",
              "label": "Items",
              "source": "",
              "type": "RETURN_ITEMS",
              "mandatory": true
            }
          ]
        }
      ],
      "subtype": "HD",
      "name": "ReturnOrder",
      "description": "Validate if the item can be returned and create the return order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.ValidateReturnItemAndQty",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CreateReturnOrderFromOrder",
          "props": null
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        },
        {
          "status": "RETURN_CREATED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "UpdateReturnableQty",
      "description": "This rule updates the returnableQty to the order items attributes",
      "rules": [
        {
          "name": "{{fluent.account.plugin.retail.base.prefix}}.UpdateOrderItemAttribute",
          "props": null
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "OrderReturnComplete",
      "description": "Update the status of the Return Order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.retail.base.prefix}}.ChangeStateGQL",
          "props": {
            "status": "RETURN_COMPLETE"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "RETURN_CREATED"
        }
      ]
    },
    {
      "userActions": [
        {
          "context": [
            {
              "confirm": false,
              "label": "APPEASEMENT",
              "type": "PRIMARY",
              "modules": [
                "adminconsole"
              ]
            }
          ],
          "attributes": [
            {
              "name": "userId",
              "label": "User ID",
              "type": "STRING",
              "source": "",
              "defaultValue": "",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "appeasementAmount",
              "label": "Appeasement Amount",
              "source": "",
              "type": "STRING",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "appeasementReason",
              "label": "Appeasement Reason",
              "source": "settings.APPEASEMENT_REASON",
              "type": "STRING",
              "mandatory": true
            },
            {
              "defaultValue": "",
              "name": "comment",
              "label": "Comment",
              "source": "",
              "type": "STRING",
              "mandatory": false
            }
          ]
        }
      ],
      "subtype": "HD",
      "name": "OrderAppeasement",
      "description": "Create an appeasement from admin console",
      "rules": [
        {
          "name": "{{fluent.account.plugin.base.prefix}}.ValidateAppeasementAmount",
          "props": null
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.VerifyBillingAccount",
          "props": {
            "BillingAccountExistsEventName": "ProcessBillingAccount",
            "NoBillingAccountExistsEventName": "NewBillingAccount"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "subtype": "HD",
      "name": "NewBillingAccount",
      "description": "Creates new BillingAccount for Order",
      "rules": [
        {
          "name": "{{fluent.account.plugin.retail.base.prefix}}.CreateBillingAccount",
          "props": {
            "eventName": "ProcessBillingAccount",
            "billingAccountType": "CUSTOMER"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "ProcessBillingAccount",
      "description": "Triggers event to create Billing Account",
      "rules": [
        {
          "name": "{{fluent.account.plugin.retail.base.prefix}}.SendEventForAppeasementToBillingAccount",
          "props": {
            "eventName": "ProcessCreditForAppeasement"
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.CheckAttributeNameExists",
          "props": {
            "noMatchEventName": "PreventReturnOperationAfterAppeasement",
            "eventName": "DO_NOTHING",
            "attributeName": "isAppeasementInitiated"
          }
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    },
    {
      "userActions": [],
      "name": "PreventReturnOperationAfterAppeasement",
      "description": "Prevent the return flow after the appeasement is created",
      "rules": [
        {
          "name": "{{fluent.account.plugin.v2.prefix}}.AddEventAttributesToEntity",
          "props": {
            "attributeNames": [
              "isAppeasementInitiated"
            ],
            "attributeTypes": [
              "STRING"
            ],
            "attributeDefaultValues": [
              "true"
            ]
          }
        },
        {
          "name": "{{fluent.account.plugin.base.prefix}}.AddReturnableQtyAttribute",
          "props": null
        }
      ],
      "eventType": "NORMAL",
      "type": "ORDER",
      "triggers": [
        {
          "status": "COMPLETED"
        },
        {
          "status": "PARTIALLY_COMPLETED"
        }
      ]
    }
  ],
  "entityType": "ORDER",
  "entitySubtype": "HD",
  "versionComment": "Initial version",
  "description": "Default HD Workflow",
  "retailerId": "{{retailer_id}}",
  "version": "1.957",
  "createdOn": "2023-06-15T10:40:02.010+00:00",
  "createdBy": "covetrus_na_rx_management ",
  "name": "ORDER::HD",
  "statuses": [
    {
      "entityType": "ORDER",
      "name": "CREATED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "FRAUD_REVIEW",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "FRAUD_REVIEW_HOLD",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "RX_MATCH_REQUESTED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "RX_HOLD",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIAL_RX_MATCH_COMPLETED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "RX_MATCH_COMPLETED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIALLY_PHARMACY_ALLOCATED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PHARMACY_ALLOCATED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PV1_REQUESTED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIALLY_PV1_REQUESTED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIALLY_PV1_VERIFIED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PV1_VERIFIED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PAYMENT_AUTH_REQUESTED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "PAYMENT_AUTH_FAILED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "CANCELLED",
      "category": "BOOKING"
    },
    {
      "entityType": "ORDER",
      "name": "FULFILMENT_PROCESSING",
      "category": "FULFILMENT"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIALLY_FULFILMENT_PROCESSING",
      "category": "FULFILMENT"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIALLY_SHIPPED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "ORDER",
      "name": "SHIPPED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "ORDER",
      "name": "PARTIALLY_COMPLETED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "ORDER",
      "name": "COMPLETED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "CREATED",
      "category": "BOOKING"
    },
    {
      "entityType": "FULFILMENT",
      "name": "EXCEPTION",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "PICK_READY",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "SHIPPED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "REJECTED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "PAYMENT_SETTLEMENT_REQUESTED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "SETTELMENT_FAILED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "FULFILLED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "FULFILMENT",
      "name": "PARTIALLY_FULFILLED",
      "category": "FULFILMENT"
    },
    {
      "entityType": "ORDER",
      "name": "RETURN_CREATED",
      "category": "DONE"
    },
    {
      "entityType": "ORDER",
      "name": "RETURN_COMPLETE",
      "category": "DONE"
    },
    {
      "entityType": "ORDER",
      "name": "",
      "category": "APPEASEMENT"
    },
    {
      "entityType": "RETURN_ORDER",
      "name": "",
      "category": "APPEASEMENT"
    },
    {
      "entityType": "BILLING_ACCOUNT",
      "name": "CREATED",
      "category": "APPEASEMENT"
    },
    {
      "entityType": "BILLING_ACCOUNT",
      "name": "",
      "category": "APPEASEMENT"
    }
  ],
  "id": null
}